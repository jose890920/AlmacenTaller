/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Control.ConstantesAlmacenyTaller;
import Control.ProductoDAO;


import Control.Validaciones;
import Facade.FacadeCliente;

import Facade.FacadeEmpleado;
import Facade.FacadeVenta;
import Modelo.Cliente;
import Control.DetalleVentaDAO;
import Modelo.DetalleVenta;

import Modelo.Empleado;
import Modelo.ParametrosFactura;

import Modelo.Persona;
import Modelo.Producto;

import Modelo.Venta;
import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;

import java.util.ArrayList;
import java.util.List;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JTable;

import javax.swing.table.DefaultTableModel;
import org.jvnet.substance.SubstanceLookAndFeel;

/**
 *
 * @author jose luis Rodriguez
 */
public class VenderGUI extends javax.swing.JDialog {
    
    Validaciones validaciones = new Validaciones();
    ConstantesAlmacenyTaller constantes = new ConstantesAlmacenyTaller();
    FacadeEmpleado facadeEmpleado = new FacadeEmpleado();
    Empleado empleado;
    Persona persona = new Persona();
    Persona personaCliente = new Persona();
    String columnasTablaProductos[] = {"ID","NOMBRE","PRECIO","STOCK"};
    String columnasTablaProductosSeleccionados[] = {"ID","NOMBRE","CANTIDAD","VLR UNIT","VLR CONJUNTO","DESCUENTO"};
    DefaultTableModel modeloTablaProductos = new DefaultTableModel();
    DefaultTableModel modeloTablaProductosSeleccionados = new DefaultTableModel();
    ProductoDAO productoDAO;
    List<Producto> listadoProducto = new ArrayList();
    double cantidadProductoSeleccionado;
    double valorProductoSeleccionado;
    double acumulaTotales = 0;
    double descuento = 0;
    int idProductoSeleccionado;
    Cliente cliente = new Cliente();
    FacadeCliente facadeCliente = new FacadeCliente();
    Venta venta = new Venta();
    FacadeVenta facadeVenta = new FacadeVenta();
    DetalleVentaDAO detalleVentaDAO = new DetalleVentaDAO();
    int codigoVentaParametroFactura;
    

      
    /**
     * Creates new form MotocicletaGUI
     */
    public VenderGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        
        registrarBtn.setEnabled(true);
        this.setTitle("Gestion Ventas");
        this.setLocationRelativeTo(null);
        modificarBtn.setEnabled(false);
        modeloTablaProductos.setColumnIdentifiers(columnasTablaProductos);
        modeloTablaProductosSeleccionados.setColumnIdentifiers(columnasTablaProductosSeleccionados);
        productosConsultaTabla.setModel(modeloTablaProductos);
        productosSeleccionadosTabla.setModel(modeloTablaProductosSeleccionados);
        registrarBtn.setEnabled(false);

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        nombresClienteTxt = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        numeroDocumentoEmpleadoTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        nombresEmpleadoTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        numeroDocumentoClienteTxt = new javax.swing.JTextField();
        fechaVentaDate = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        productosConsultaTabla = new javax.swing.JTable();
        nombreProductoTxt = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        productoSeleccionadoTxt = new javax.swing.JTextField();
        cantidadProductoSeleccionadoTxt = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        productosSeleccionadosTabla = new javax.swing.JTable();
        descuentoProductoSeleccionadoTxt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        totalParcialLbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        mensajeLbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        registrarBtn = new javax.swing.JButton();
        modificarBtn = new javax.swing.JButton();
        consultarBtn = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        jPanel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPanel1FocusGained(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel10.setText("Documento Cliente");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("*");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, -1, 10));

        nombresClienteTxt.setEditable(false);
        nombresClienteTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        nombresClienteTxt.setMaximumSize(new java.awt.Dimension(6, 10));
        nombresClienteTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombresClienteTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombresClienteTxtFocusLost(evt);
            }
        });
        nombresClienteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombresClienteTxtActionPerformed(evt);
            }
        });
        nombresClienteTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombresClienteTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombresClienteTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombresClienteTxtKeyTyped(evt);
            }
        });
        jPanel1.add(nombresClienteTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 100, 200, -1));

        jLabel21.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel21.setText("Fecha de Venta");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, -1, -1));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 0, 0));
        jLabel24.setText("*");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, 10));

        jLabel29.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel29.setText("Nombres Cliente");
        jPanel1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 80, -1, -1));

        numeroDocumentoEmpleadoTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        numeroDocumentoEmpleadoTxt.setMaximumSize(new java.awt.Dimension(6, 10));
        numeroDocumentoEmpleadoTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numeroDocumentoEmpleadoTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numeroDocumentoEmpleadoTxtFocusLost(evt);
            }
        });
        numeroDocumentoEmpleadoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroDocumentoEmpleadoTxtActionPerformed(evt);
            }
        });
        numeroDocumentoEmpleadoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numeroDocumentoEmpleadoTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numeroDocumentoEmpleadoTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroDocumentoEmpleadoTxtKeyTyped(evt);
            }
        });
        jPanel1.add(numeroDocumentoEmpleadoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 200, -1));

        jLabel9.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel9.setText("Documento Empleado");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, -1));

        nombresEmpleadoTxt.setEditable(false);
        nombresEmpleadoTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        nombresEmpleadoTxt.setMaximumSize(new java.awt.Dimension(6, 10));
        nombresEmpleadoTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombresEmpleadoTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombresEmpleadoTxtFocusLost(evt);
            }
        });
        nombresEmpleadoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombresEmpleadoTxtActionPerformed(evt);
            }
        });
        nombresEmpleadoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombresEmpleadoTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombresEmpleadoTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombresEmpleadoTxtKeyTyped(evt);
            }
        });
        jPanel1.add(nombresEmpleadoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 40, 200, -1));

        jLabel6.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel6.setText("Nombres Empleado");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, -1, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("*");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, -1, 10));

        numeroDocumentoClienteTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        numeroDocumentoClienteTxt.setMaximumSize(new java.awt.Dimension(6, 10));
        numeroDocumentoClienteTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                numeroDocumentoClienteTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                numeroDocumentoClienteTxtFocusLost(evt);
            }
        });
        numeroDocumentoClienteTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroDocumentoClienteTxtActionPerformed(evt);
            }
        });
        numeroDocumentoClienteTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                numeroDocumentoClienteTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                numeroDocumentoClienteTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroDocumentoClienteTxtKeyTyped(evt);
            }
        });
        jPanel1.add(numeroDocumentoClienteTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 200, -1));

        fechaVentaDate.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jPanel1.add(fechaVentaDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 200, 26));

        jTabbedPane1.addTab("Datos de la venta", jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        productosConsultaTabla.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        productosConsultaTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        productosConsultaTabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        productosConsultaTabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        productosConsultaTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productosConsultaTablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(productosConsultaTabla);
        productosConsultaTabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, -1, 80));

        nombreProductoTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        nombreProductoTxt.setMaximumSize(new java.awt.Dimension(6, 10));
        nombreProductoTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nombreProductoTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nombreProductoTxtFocusLost(evt);
            }
        });
        nombreProductoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nombreProductoTxtActionPerformed(evt);
            }
        });
        nombreProductoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nombreProductoTxtKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreProductoTxtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nombreProductoTxtKeyTyped(evt);
            }
        });
        jPanel2.add(nombreProductoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 180, -1));

        jLabel11.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel11.setText("Cantidad");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 180, -1, -1));

        productoSeleccionadoTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        productoSeleccionadoTxt.setEnabled(false);
        jPanel2.add(productoSeleccionadoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, 180, 26));

        cantidadProductoSeleccionadoTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        cantidadProductoSeleccionadoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        cantidadProductoSeleccionadoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadProductoSeleccionadoTxtActionPerformed(evt);
            }
        });
        cantidadProductoSeleccionadoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantidadProductoSeleccionadoTxtKeyTyped(evt);
            }
        });
        jPanel2.add(cantidadProductoSeleccionadoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 200, 110, 26));

        jLabel12.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel12.setText("Nombre producto");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel13.setText("Producto Seleccionado");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("*");
        jPanel2.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, -1, 10));

        productosSeleccionadosTabla.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        productosSeleccionadosTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(productosSeleccionadosTabla);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, -1, 110));

        descuentoProductoSeleccionadoTxt.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        descuentoProductoSeleccionadoTxt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        descuentoProductoSeleccionadoTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descuentoProductoSeleccionadoTxtActionPerformed(evt);
            }
        });
        descuentoProductoSeleccionadoTxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                descuentoProductoSeleccionadoTxtKeyTyped(evt);
            }
        });
        jPanel2.add(descuentoProductoSeleccionadoTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 90, 26));

        jLabel14.setFont(new java.awt.Font("Tempus Sans ITC", 1, 14)); // NOI18N
        jLabel14.setText("Descuento");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, -1, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 0, 0));
        jLabel27.setText("*");
        jPanel2.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, 10));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel2.setText("%");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 200, 10, 20));

        totalParcialLbl.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jPanel2.add(totalParcialLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 366, 140, 30));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/borrarRegistro.png"))); // NOI18N
        jButton1.setToolTipText("ELIMINAR REGISTRO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, -1, -1));

        jTabbedPane1.addTab("Añadir Productos", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 540, 430));

        mensajeLbl.setFont(new java.awt.Font("Vani", 1, 18)); // NOI18N
        mensajeLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        getContentPane().add(mensajeLbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 440, 410, 30));

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Vender.png"))); // NOI18N
        jLabel1.setText("Vender");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 410, 210, 100));

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        registrarBtn.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        registrarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/guardar.png"))); // NOI18N
        registrarBtn.setToolTipText("GUARDAR");
        registrarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registrarBtnActionPerformed(evt);
            }
        });
        jPanel3.add(registrarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 145, 55));

        modificarBtn.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        modificarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/editar.png"))); // NOI18N
        modificarBtn.setToolTipText("MODIFICAR");
        modificarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarBtnActionPerformed(evt);
            }
        });
        jPanel3.add(modificarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 145, 55));

        consultarBtn.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        consultarBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/buscar.png"))); // NOI18N
        consultarBtn.setToolTipText("CONSULTAR");
        consultarBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarBtnActionPerformed(evt);
            }
        });
        jPanel3.add(consultarBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 145, 60));

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/limpiar.png"))); // NOI18N
        jButton3.setToolTipText("LIMPIAR");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 145, 55));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 30, 160, 290));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nombresClienteTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombresClienteTxtFocusGained

        validaciones.validarEnfoque(nombresClienteTxt);
    }//GEN-LAST:event_nombresClienteTxtFocusGained

    private void nombresClienteTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombresClienteTxtFocusLost

        validarSonido(validaciones.validarCampoVacio(nombresClienteTxt));

  
        
    }//GEN-LAST:event_nombresClienteTxtFocusLost

    private void nombresClienteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombresClienteTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombresClienteTxtActionPerformed

    private void nombresClienteTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombresClienteTxtKeyPressed

    }//GEN-LAST:event_nombresClienteTxtKeyPressed

    private void nombresClienteTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombresClienteTxtKeyReleased

    }//GEN-LAST:event_nombresClienteTxtKeyReleased

    private void nombresClienteTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombresClienteTxtKeyTyped

        validaciones.minusculaToMayuscula(evt);
        validaciones.validarCantidadCaracteresTexto(evt, nombresClienteTxt,
            constantes.CONSTANTE_TEXTO_POR_DEFECTO);
    }//GEN-LAST:event_nombresClienteTxtKeyTyped

    private void registrarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registrarBtnActionPerformed
        
       
        try {
            persona = new Persona();
            personaCliente = new Persona();
            empleado = new Empleado();
            if (!validaciones.validarCampoVacio(numeroDocumentoEmpleadoTxt) &&
                !validaciones.validarCampoVacio(numeroDocumentoClienteTxt)) {
             persona.setNumeroDocumento(numeroDocumentoEmpleadoTxt.getText());
             personaCliente.setNumeroDocumento(numeroDocumentoClienteTxt.getText()); 
            }
            
            
            empleado.setPersona(persona);
            cliente.setPersona(personaCliente);
            if (validaciones.validarCamposVenta(numeroDocumentoEmpleadoTxt, numeroDocumentoClienteTxt,
                fechaVentaDate, productosSeleccionadosTabla).equals("") &&
                facadeEmpleado.consultarEmpleado(empleado) != null &&
                facadeCliente.consultarCliente(cliente) != null) {
                
                cliente = facadeCliente.consultarCliente(cliente);
                empleado = facadeEmpleado.consultarEmpleado(empleado);
                int codigoVenta = facadeVenta.registrarVenta(mapeoVenta(venta));
                registrarDetalleVenta(productosSeleccionadosTabla,codigoVenta);
                ComprobanteGUI comprobanteGUI = new ComprobanteGUI(null, true, mapearParametrosFactura());
                
                comprobanteGUI.setVisible(true);
             
        }else{
                if (!validaciones.validarCamposVenta(numeroDocumentoEmpleadoTxt, numeroDocumentoClienteTxt,
                    fechaVentaDate, productosSeleccionadosTabla).equals("")) {
                    mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_VALIDACION_POR_DEFECTO);
                }else if(facadeEmpleado.consultarEmpleado(empleado) == null){
                    mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_NO_EXISTE_REGISTRO);
                }else if(facadeCliente.consultarCliente(cliente) == null){
                    mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_NO_EXISTE_REGISTRO);
                }
                mensajeLbl.setForeground(Color.red);
                    
    }
            validaciones.notificarMensajeconTimer(mensajeLbl);

    }   catch (SQLException | ParseException ex) {
            Logger.getLogger(EmpleadoGUI.class.getName()).log(Level.SEVERE, null, ex);
        } 
          
    }//GEN-LAST:event_registrarBtnActionPerformed

    private void numeroDocumentoEmpleadoTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroDocumentoEmpleadoTxtFocusGained
        validaciones.validarEnfoque(numeroDocumentoEmpleadoTxt);
    }//GEN-LAST:event_numeroDocumentoEmpleadoTxtFocusGained

    private void numeroDocumentoEmpleadoTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroDocumentoEmpleadoTxtFocusLost
        validarSonido(validaciones.validarCampoVacio(numeroDocumentoEmpleadoTxt));
    }//GEN-LAST:event_numeroDocumentoEmpleadoTxtFocusLost

    private void numeroDocumentoEmpleadoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroDocumentoEmpleadoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDocumentoEmpleadoTxtActionPerformed

    private void numeroDocumentoEmpleadoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDocumentoEmpleadoTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDocumentoEmpleadoTxtKeyPressed

    private void numeroDocumentoEmpleadoTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDocumentoEmpleadoTxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDocumentoEmpleadoTxtKeyReleased

    private void numeroDocumentoEmpleadoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDocumentoEmpleadoTxtKeyTyped
        validarSonido(validaciones.validarSoloNumeros(evt, numeroDocumentoEmpleadoTxt));
        validaciones.validarCantidadCaracteresTexto(evt, numeroDocumentoEmpleadoTxt,
            constantes.CONSTANTE_CARACTERES_POR_LINEA);
    }//GEN-LAST:event_numeroDocumentoEmpleadoTxtKeyTyped

    private void nombresEmpleadoTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombresEmpleadoTxtFocusGained

       
    }//GEN-LAST:event_nombresEmpleadoTxtFocusGained

    private void nombresEmpleadoTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombresEmpleadoTxtFocusLost

       
    }//GEN-LAST:event_nombresEmpleadoTxtFocusLost

    private void nombresEmpleadoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombresEmpleadoTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nombresEmpleadoTxtActionPerformed

    private void nombresEmpleadoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombresEmpleadoTxtKeyPressed

    }//GEN-LAST:event_nombresEmpleadoTxtKeyPressed

    private void nombresEmpleadoTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombresEmpleadoTxtKeyReleased

    }//GEN-LAST:event_nombresEmpleadoTxtKeyReleased

    private void nombresEmpleadoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombresEmpleadoTxtKeyTyped

        validarSonido(validaciones.validarSoloLetras(evt, nombresEmpleadoTxt));
        validaciones.minusculaToMayuscula(evt);
        validaciones.validarCantidadCaracteresTexto(evt, nombresEmpleadoTxt,
            constantes.CONSTANTE_TEXTO_POR_DEFECTO);
    }//GEN-LAST:event_nombresEmpleadoTxtKeyTyped

    private void consultarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarBtnActionPerformed
        
        try {
            persona = new Persona();
            personaCliente = new Persona();
            empleado = new Empleado();
            if (!validaciones.validarCampoVacio(numeroDocumentoEmpleadoTxt) &&
                !validaciones.validarCampoVacio(numeroDocumentoClienteTxt)) {
             persona.setNumeroDocumento(numeroDocumentoEmpleadoTxt.getText());
             personaCliente.setNumeroDocumento(numeroDocumentoClienteTxt.getText()); 
             cliente.setPersona(personaCliente);
             empleado.setPersona(persona);
            
            
            if (facadeEmpleado.consultarEmpleado(empleado) != null &&
                facadeCliente.consultarCliente(cliente) != null) {
                
                empleado = facadeEmpleado.consultarEmpleado(empleado);
                
                cliente = facadeCliente.consultarCliente(cliente);
                nombresEmpleadoTxt.setText(empleado.getPersona().getNombres().trim()+
                        " "+empleado.getPersona().getApellidos().trim());
                nombresClienteTxt.setText(cliente.getPersona().getNombres().trim()+
                        " "+cliente.getPersona().getApellidos().trim());
         
                    registrarBtn.setEnabled(true);
                
                
                


            }else{
                if (!validaciones.validarCampoVacio(numeroDocumentoEmpleadoTxt)) {
                    registrarBtn.setEnabled(false);
                    modificarBtn.setEnabled(false);

                }

            }
            }
        } catch (SQLException | ParseException ex) {
            Logger.getLogger(EmpleadoGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_consultarBtnActionPerformed

    private void modificarBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarBtnActionPerformed
        /*
        try {

            if (validaciones.validarCamposUsuario(numeroDocumentoEmpleadoTxt, nombresEmpleadoTxt,
                                                  nombresClienteTxt, contraseniaTxt,
                                                  tipoUsuarioCombo).equals("")){
                if (validaciones.compararContrasenias(contraseniaTxt, confirmaContraseniaTxt)) {
                    usuario.setEmpleado(empleado);
                    mensajeLbl.setForeground(Color.green);
                    mensajeLbl.setText(facadeUsuario.modificarUsuario(mapeoUsuario(usuario)));
                }else{
                    mensajeLbl.setForeground(Color.red);
                    mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_CONTRASENIAS_DIFERENTES);
                }
            

        }else{
            mensajeLbl.setForeground(Color.red);
            mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_VALIDACION_POR_DEFECTO);
        }

        validaciones.notificarMensajeconTimer(mensajeLbl);

        } catch (SQLException | ParseException ex) {
            Logger.getLogger(ProductoGUIJF.class.getName()).log(Level.SEVERE, null, ex);
        }
        */
    }//GEN-LAST:event_modificarBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   /*
        validaciones.limpiarCamposUsuario(nombresClienteTxt, contraseniaTxt,
                tipoUsuarioCombo, confirmaContraseniaTxt, nombresEmpleadoTxt, numeroDocumentoEmpleadoTxt);
        modificarBtn.setEnabled(false);
        registrarBtn.setEnabled(false);
*/
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jPanel1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPanel1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1FocusGained

    private void numeroDocumentoClienteTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroDocumentoClienteTxtFocusGained
        validaciones.validarEnfoque(numeroDocumentoClienteTxt);
    }//GEN-LAST:event_numeroDocumentoClienteTxtFocusGained

    private void numeroDocumentoClienteTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_numeroDocumentoClienteTxtFocusLost
        validarSonido(validaciones.validarCampoVacio(numeroDocumentoClienteTxt));
    }//GEN-LAST:event_numeroDocumentoClienteTxtFocusLost

    private void numeroDocumentoClienteTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroDocumentoClienteTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDocumentoClienteTxtActionPerformed

    private void numeroDocumentoClienteTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDocumentoClienteTxtKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDocumentoClienteTxtKeyPressed

    private void numeroDocumentoClienteTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDocumentoClienteTxtKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_numeroDocumentoClienteTxtKeyReleased

    private void numeroDocumentoClienteTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroDocumentoClienteTxtKeyTyped
        validarSonido(validaciones.validarSoloNumeros(evt, numeroDocumentoClienteTxt));
        validaciones.validarCantidadCaracteresTexto(evt, numeroDocumentoClienteTxt,
            constantes.CONSTANTE_CARACTERES_POR_LINEA);
    }//GEN-LAST:event_numeroDocumentoClienteTxtKeyTyped

    private void nombreProductoTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreProductoTxtFocusGained

        validaciones.validarEnfoque(nombreProductoTxt);
    }//GEN-LAST:event_nombreProductoTxtFocusGained

    private void nombreProductoTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nombreProductoTxtFocusLost

        validarSonido(validaciones.validarCampoVacio(nombreProductoTxt));
    }//GEN-LAST:event_nombreProductoTxtFocusLost

    private void nombreProductoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nombreProductoTxtActionPerformed
        productoDAO = new ProductoDAO();
        
        try {
            listadoProducto = productoDAO.consultarProducto(nombreProductoTxt.getText());
            if (listadoProducto != null) {
                productosConsultaTabla.setModel(validaciones.asignarModeloTabla(modeloTablaProductos, listadoProducto));
            }else{
                mensajeLbl.setForeground(Color.red);
                mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_VALIDACION_NO_EXISTEN_PRODUCTOS);
                validaciones.notificarMensajeconTimer(mensajeLbl);
                DefaultTableModel auxModelo = new DefaultTableModel();
                auxModelo.setColumnIdentifiers(columnasTablaProductos);
                productosConsultaTabla.setModel(auxModelo);
                productoSeleccionadoTxt.setText("");
                descuentoProductoSeleccionadoTxt.setText("");
                cantidadProductoSeleccionadoTxt.setText("");
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(VenderGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nombreProductoTxtActionPerformed

    private void nombreProductoTxtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreProductoTxtKeyPressed

    }//GEN-LAST:event_nombreProductoTxtKeyPressed

    private void nombreProductoTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreProductoTxtKeyReleased

    }//GEN-LAST:event_nombreProductoTxtKeyReleased

    private void nombreProductoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreProductoTxtKeyTyped

        validarSonido(validaciones.validarSoloLetras(evt, nombreProductoTxt));
        validaciones.minusculaToMayuscula(evt);
        validaciones.validarCantidadCaracteresTexto(evt, nombreProductoTxt,
            constantes.CONSTANTE_TEXTO_POR_DEFECTO);
    }//GEN-LAST:event_nombreProductoTxtKeyTyped

    private void productosConsultaTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productosConsultaTablaMouseClicked
        
     productoSeleccionadoTxt.setText(productosConsultaTabla.getValueAt(productosConsultaTabla.getSelectedRow(), 1).toString());
     cantidadProductoSeleccionado =  Double.parseDouble(productosConsultaTabla.getValueAt(productosConsultaTabla.getSelectedRow(), 3).toString());
     valorProductoSeleccionado =  Double.parseDouble(productosConsultaTabla.getValueAt(productosConsultaTabla.getSelectedRow(), 2).toString());
     idProductoSeleccionado =  Integer.parseInt(productosConsultaTabla.getValueAt(productosConsultaTabla.getSelectedRow(), 0).toString());
     cantidadProductoSeleccionadoTxt.setText("");
     descuentoProductoSeleccionadoTxt.setText("");
  
    }//GEN-LAST:event_productosConsultaTablaMouseClicked

    private void cantidadProductoSeleccionadoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadProductoSeleccionadoTxtActionPerformed
        
        if (cantidadProductoSeleccionadoTxt.getText().trim().equals("") || Double.parseDouble(cantidadProductoSeleccionadoTxt.getText()) > cantidadProductoSeleccionado) {
            
            mensajeLbl.setForeground(Color.red);
            mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_CANTIDAD_DE_PRODUCTOS_NO_DISPONIBLE);
            validaciones.notificarMensajeconTimer(mensajeLbl);
        }else{
            System.out.println("cantidad"+cantidadProductoSeleccionadoTxt.getText());
            if (descuentoProductoSeleccionadoTxt.getText().trim().equals("") ) {
                descuentoProductoSeleccionadoTxt.setText("0");
            }


            if (!validaciones.validarNombreProducto(productosSeleccionadosTabla, productoSeleccionadoTxt)) {
                    mapeoProductoSeleccionado();
                    calcularValorParcial();
                }else{
                    mensajeLbl.setForeground(Color.red);
                    mensajeLbl.setText(constantes.CONSTANTE_MENSAJE_PRODUCTO_SELECCIONADO);
                    validaciones.notificarMensajeconTimer(mensajeLbl);
                }
            
            
        }
    }//GEN-LAST:event_cantidadProductoSeleccionadoTxtActionPerformed

    private void cantidadProductoSeleccionadoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadProductoSeleccionadoTxtKeyTyped
        validaciones.validarSoloNumerosConEnter(evt, cantidadProductoSeleccionadoTxt);
    }//GEN-LAST:event_cantidadProductoSeleccionadoTxtKeyTyped

    private void descuentoProductoSeleccionadoTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descuentoProductoSeleccionadoTxtActionPerformed

    }//GEN-LAST:event_descuentoProductoSeleccionadoTxtActionPerformed

    private void descuentoProductoSeleccionadoTxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descuentoProductoSeleccionadoTxtKeyTyped
        validaciones.validarSoloNumerosConEnter(evt, descuentoProductoSeleccionadoTxt);
        validaciones.validarCantidadCaracteresTexto(evt, descuentoProductoSeleccionadoTxt, 2);
    }//GEN-LAST:event_descuentoProductoSeleccionadoTxtKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (productosSeleccionadosTabla.getSelectedRow() > -1) {
            modeloTablaProductosSeleccionados.removeRow(productosSeleccionadosTabla.getSelectedRow());
            calcularValorParcial();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
 
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JDialog.setDefaultLookAndFeelDecorated(true); 
                SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin.BusinessBlackSteelSkin");
                VenderGUI dialog = new VenderGUI(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cantidadProductoSeleccionadoTxt;
    private javax.swing.JButton consultarBtn;
    private javax.swing.JTextField descuentoProductoSeleccionadoTxt;
    private com.toedter.calendar.JDateChooser fechaVentaDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel mensajeLbl;
    private javax.swing.JButton modificarBtn;
    private javax.swing.JTextField nombreProductoTxt;
    private javax.swing.JTextField nombresClienteTxt;
    private javax.swing.JTextField nombresEmpleadoTxt;
    private javax.swing.JTextField numeroDocumentoClienteTxt;
    private javax.swing.JTextField numeroDocumentoEmpleadoTxt;
    private javax.swing.JTextField productoSeleccionadoTxt;
    private javax.swing.JTable productosConsultaTabla;
    private javax.swing.JTable productosSeleccionadosTabla;
    private javax.swing.JButton registrarBtn;
    private javax.swing.JLabel totalParcialLbl;
    // End of variables declaration//GEN-END:variables

     public void validarSonido(boolean flag){
         if (flag) {
              getToolkit().beep();
             
         }else{
             
         }
     } 
     
     public Venta mapeoVenta(Venta venta){
         venta = new Venta();
         venta.setCliente(cliente);
         venta.setEmpleado(empleado);
        
         venta.setEmpleado(empleado);
         venta.setEstado(constantes.CONSTANTE_ESTADO_POR_DEFECTO);
         venta.setCodCliente(cliente.getCodCliente());
         venta.setCodEmpleado(empleado.getCodEmpleado());
         venta.setFechaVenta(fechaVentaDate.getDate());
         venta.setValorTotal(0.0);
         
         
        return venta;

     }
     
     
     public void mapeoProductoSeleccionado(){
     
                Object[] productoAgregar = new Object[6];
                productoAgregar[0] = idProductoSeleccionado;
                productoAgregar[1] = productoSeleccionadoTxt.getText().trim();
                productoAgregar[2] = cantidadProductoSeleccionadoTxt.getText();
                productoAgregar[3] = valorProductoSeleccionado;
                productoAgregar[4] = valorProductoSeleccionado * Double.parseDouble(cantidadProductoSeleccionadoTxt.getText());
                productoAgregar[5] = ((Double.parseDouble(descuentoProductoSeleccionadoTxt.getText().trim()))* Double.parseDouble(productoAgregar[4].toString())) / 100;
                modeloTablaProductosSeleccionados.addRow(productoAgregar);
                productosSeleccionadosTabla.setModel(modeloTablaProductosSeleccionados);
     
     }
     
     public void registrarDetalleVenta(JTable productos, int codigoVenta) throws SQLException, ParseException{
         
         for (int i = 0; i < productos.getRowCount(); i++) {
             DetalleVenta detalleVenta = new DetalleVenta();
             detalleVenta.setCodVenta(codigoVenta);
             detalleVenta.setCantidadProducto(Integer.parseInt(productos.getValueAt(i, 2).toString()));
             detalleVenta.setCodProducto(Integer.parseInt(productos.getValueAt(i, 0).toString()));
             detalleVenta.setDescuento(Double.parseDouble(productos.getValueAt(i, 5).toString()));
             detalleVenta.setValorConjunto(Double.parseDouble(productos.getValueAt(i, 4).toString()));
             detalleVenta.setValorUnitario(Double.parseDouble(productos.getValueAt(i, 3).toString()));
             
             detalleVentaDAO.registrarDetalleVenta(detalleVenta);
             Producto producto = new Producto();
             producto.setCodProducto(detalleVenta.getCodProducto());
             String parametroModificacion =  "-"+productos.getValueAt(i, 2).toString();
             productoDAO.actualizarStock(producto, parametroModificacion);
         }
         venta.setCodVenta(codigoVenta);
         venta.setValorTotal(Double.parseDouble(totalParcialLbl.getText()));
         facadeVenta.modificarVenta(venta);
         codigoVentaParametroFactura = codigoVenta;
         
         

         
         
     
     }

    public void calcularValorParcial() {
                      acumulaTotales = 0;
                    descuento = 0;
                    for (int i = 0; i < productosSeleccionadosTabla.getRowCount() ; i++) {
                    descuento = descuento + Double.parseDouble(productosSeleccionadosTabla.getValueAt(i, 5).toString());
                    acumulaTotales = acumulaTotales + Double.parseDouble(productosSeleccionadosTabla.getValueAt(i, 3).toString()) * Double.parseDouble(productosSeleccionadosTabla.getValueAt(i, 2).toString());
                    
                }
                totalParcialLbl.setText(validaciones.calcularValorTotal(19, acumulaTotales, descuento)+"");
    }
    
    
    public ParametrosFactura mapearParametrosFactura(){
                ParametrosFactura parametrosFactura = new ParametrosFactura();
                parametrosFactura.setNombreCliente(nombresClienteTxt.getText());
                parametrosFactura.setNombreEmpleado(nombresEmpleadoTxt.getText());
                parametrosFactura.setNumeroDocumentoCliente(numeroDocumentoClienteTxt.getText());
                parametrosFactura.setNumeroDocumentoEmpleado(numeroDocumentoEmpleadoTxt.getText());
                parametrosFactura.setProductosaVender(modeloTablaProductosSeleccionados);
                parametrosFactura.setCodigoVenta(codigoVentaParametroFactura);
    return parametrosFactura;
    }

}
